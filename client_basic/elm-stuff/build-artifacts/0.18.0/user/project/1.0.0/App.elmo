var _user$project$App$viewMessage = function (msg) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(msg),
			_1: {ctor: '[]'}
		});
};
var _user$project$App$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Input':
				return A2(
					F2(
						function (x, y) {
							return A2(_elm_lang$core$Platform_Cmd_ops['!'], x, y);
						}),
					model,
					{ctor: '[]'});
			case 'Send':
				return A2(
					F2(
						function (x, y) {
							return A2(_elm_lang$core$Platform_Cmd_ops['!'], x, y);
						}),
					model,
					{ctor: '[]'});
			default:
				var _p1 = A2(_elm_lang$core$Debug$log, 'NewMessage: ->', _p0._0);
				return A2(
					F2(
						function (x, y) {
							return A2(_elm_lang$core$Platform_Cmd_ops['!'], x, y);
						}),
					model,
					{ctor: '[]'});
		}
	});
var _user$project$App$haskellServer = 'ws://localhost:8000';
var _user$project$App$Model = F2(
	function (a, b) {
		return {input: a, messages: b};
	});
var _user$project$App$init = {
	ctor: '_Tuple2',
	_0: A2(
		_user$project$App$Model,
		'',
		{ctor: '[]'}),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$App$NewMessage = function (a) {
	return {ctor: 'NewMessage', _0: a};
};
var _user$project$App$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$websocket$WebSocket$listen, _user$project$App$haskellServer, _user$project$App$NewMessage),
			_1: {
				ctor: '::',
				_0: _elm_lang$websocket$WebSocket$keepAlive(_user$project$App$haskellServer),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$App$Send = {ctor: 'Send'};
var _user$project$App$Input = function (a) {
	return {ctor: 'Input', _0: a};
};
var _user$project$App$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onInput(_user$project$App$Input),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$value(model.input),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$App$Send),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Send'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							_user$project$App$viewMessage,
							_elm_lang$core$List$reverse(model.messages))),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$App$main = _elm_lang$html$Html$program(
	{init: _user$project$App$init, view: _user$project$App$view, update: _user$project$App$update, subscriptions: _user$project$App$subscriptions})();
